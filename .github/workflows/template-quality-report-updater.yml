name: Update Quality Report On README

on:
    workflow_call:

permissions:
    pull-requests: write
    contents: write

jobs:
    update-code-coverage-on-readme:
        runs-on: [ubuntu-latest]
        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.9"

            - name: Install dev dependencies
              run: |
                  pip install -U wheel setuptools pip
                  pip install poetry
                  poetry install

            - name: Run coverage
              env:
                  VOLUME_MOUNT_PATH: ${{ runner.temp }}
              run: poetry run coverage run -m pytest -p no:warnings --junitxml=junit.xml --cov=. --cov-report html --cov-report xml | tee .coverage.ci.log

            - name: Calculate Code Coverage On Master
              id: coverage-comment
              uses: MishaKav/pytest-coverage-comment@main
              with:
                  pytest-xml-coverage-path: ./coverage.xml
                  junitxml-path: ./junit.xml

            - name: Fail if unit test got failure
              run: |
                  echo "Coverage Errors - ${{ steps.coverage-comment.outputs.errors }}"
                  echo "Coverage Failures - ${{ steps.coverage-comment.outputs.failures }}"
                  test_errors=${{ steps.coverage-comment.outputs.errors }}
                  test_failures=${{ steps.coverage-comment.outputs.failures }}
                  if (( ${test_errors} > 0 )); then
                      echo "âœ– Tests has ERRORS."; exit 1;
                  fi
                  if (( ${test_failures} > 0 )); then
                      echo "âœ– Tests has FAILED."; exit 1;
                  fi

            - name: Get Repository Name
              id: github-repo-name
              run: |
                  echo "reponame=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT

            - name: Update Code Coverage Summary Report On README
              if: ${{ github.event_name == 'schedule' }}
              run: |
                  summay=${{ steps.coverage-comment.outputs.summaryReport }}
                  summay="${summay%\"}"
                  summay="${summay#\"}"
                  sed -i "/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/ c \
                  <!-- Pytest Coverage Comment:Begin -->\n${summay}\n<!-- Pytest Coverage Comment:End -->" ./README.md

            - name: Create Pull Request
              if: ${{ github.event_name == 'schedule' }}
              id: cpr
              uses: peter-evans/create-pull-request@v5
              with:
                  branch: update/coverage-report-readme
                  title: ðŸ§ª Auto-update Update Coverage on README
                  commit-message: ðŸ§ª Auto-update Update Coverage on README
                  committer: Mason Lin <pizza0117@gmail.com>
                  author: Mason Lin <pizza0117@gmail.com>
                  body: |
                      Update code coverage report of README.
                  labels: |
                      automated pr
                      update
                      readme
                      code coverage
                  delete-branch: true
                  add-paths: |
                      README.md

            - name: Enable Pull Request Automerge
              if: ${{ (steps.cpr.outputs.pull-request-operation == 'created') && (github.event_name == 'schedule') }}
              uses: peter-evans/enable-pull-request-automerge@v2
              with:
                  pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
                  merge-method: squash
